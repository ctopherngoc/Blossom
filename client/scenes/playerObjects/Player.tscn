[gd_scene load_steps=92 format=2]

[ext_resource path="res://assets/CharacterSpriteSheet/default/0/stand1_1/L1,R1,C1,body,visible,normal,255.png" type="Texture" id=1]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/walk1_1/L1,R1,C1,body,visible,normal,255.png" type="Texture" id=3]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/stand1_3/L1,R1,C1,body,visible,normal,255.png" type="Texture" id=4]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/walk1_3/L1,R1,C1,body,visible,normal,255.png" type="Texture" id=5]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/stand1_0/L1,R1,C1,body,visible,normal,255.png" type="Texture" id=6]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/walk1_4/L1,R1,C1,body,visible,normal,255.png" type="Texture" id=7]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/walk1_0/L1,R1,C1,body,visible,normal,255.png" type="Texture" id=8]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/stand1_2/L1,R1,C1,body,visible,normal,255.png" type="Texture" id=9]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/walk1_3/L3,R1,C1,head,visible,normal,255.png" type="Texture" id=10]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/jump_0/L2,R1,C1,head,visible,normal,255.png" type="Texture" id=11]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/stand1_2/L4,R1,C1,hairShade,visible,normal,255.png" type="Texture" id=12]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/jump_1/L4,R1,C1,armOverHair,visible,normal,255.png" type="Texture" id=13]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/stand1_1/L4,R1,C1,hairShade,visible,normal,255.png" type="Texture" id=14]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/jump_0/L1,R1,C1,body,visible,normal,255.png" type="Texture" id=15]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/walk1_0/L4,R1,C1,hairShade,visible,normal,255.png" type="Texture" id=16]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/walk1_4/L4,R1,C1,hairShade,visible,normal,255.png" type="Texture" id=17]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/walk1_1/L4,R1,C1,hairShade,visible,normal,255.png" type="Texture" id=18]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/jump_1/L1,R1,C1,body,visible,normal,255.png" type="Texture" id=19]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/walk1_0/L3,R1,C1,head,visible,normal,255.png" type="Texture" id=20]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/walk1_2/L1,R1,C1,body,visible,normal,255.png" type="Texture" id=21]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/walk1_4/L3,R1,C1,head,visible,normal,255.png" type="Texture" id=22]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/walk1_3/L4,R1,C1,hairShade,visible,normal,255.png" type="Texture" id=23]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/walk1_2/L4,R1,C1,hairShade,visible,normal,255.png" type="Texture" id=24]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/walk1_1/L3,R1,C1,head,visible,normal,255.png" type="Texture" id=25]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/jump_1/L2,R1,C1,head,visible,normal,255.png" type="Texture" id=26]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/walk1_3/L2,R1,C1,arm,visible,normal,255.png" type="Texture" id=27]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/walk1_0/L2,R1,C1,arm,visible,normal,255.png" type="Texture" id=28]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/alert_2/L4,R1,C1,armOverHair,visible,normal,255.png" type="Texture" id=29]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/stand1_0/L4,R1,C1,hairShade,visible,normal,255.png" type="Texture" id=30]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/stand1_0/L2,R1,C1,arm,visible,normal,255.png" type="Texture" id=31]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/jump_1/L3,R1,C1,hairShade,visible,normal,255.png" type="Texture" id=32]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/alert_0/L4,R1,C1,armOverHair,visible,normal,255.png" type="Texture" id=33]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/stabO1_2/L3,R1,C1,head,visible,normal,255.png" type="Texture" id=34]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/alert_0/L2,R1,C1,head,visible,normal,255.png" type="Texture" id=35]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/walk1_4/L2,R1,C1,arm,visible,normal,255.png" type="Texture" id=36]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/stabO1_0/L2,R1,C1,arm,visible,normal,255.png" type="Texture" id=37]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/stand1_3/L2,R1,C1,arm,visible,normal,255.png" type="Texture" id=38]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/stand1_3/L3,R1,C1,head,visible,normal,255.png" type="Texture" id=39]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/alert_2/L1,R1,C1,body,visible,normal,255.png" type="Texture" id=40]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/stabO1_1/L1,R1,C1,body,visible,normal,255.png" type="Texture" id=41]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/stand1_1/L3,R1,C1,head,visible,normal,255.png" type="Texture" id=42]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/stand1_1/L2,R1,C1,arm,visible,normal,255.png" type="Texture" id=43]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/alert_3/L1,R1,C1,body,visible,normal,255.png" type="Texture" id=44]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/walk1_2/L2,R1,C1,arm,visible,normal,255.png" type="Texture" id=45]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/alert_2/L2,R1,C1,head,visible,normal,255.png" type="Texture" id=46]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/alert_3/L2,R1,C1,head,visible,normal,255.png" type="Texture" id=47]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/alert_2/L3,R1,C1,hairShade,visible,normal,255.png" type="Texture" id=48]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/alert_1/L4,R1,C1,armOverHair,visible,normal,255.png" type="Texture" id=49]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/stabO1_0/L3,R1,C1,head,visible,normal,255.png" type="Texture" id=50]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/alert_3/L3,R1,C1,hairShade,visible,normal,255.png" type="Texture" id=51]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/stand1_3/L4,R1,C1,hairShade,visible,normal,255.png" type="Texture" id=52]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/alert_0/L3,R1,C1,hairShade,visible,normal,255.png" type="Texture" id=53]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/stand1_2/L2,R1,C1,arm,visible,normal,255.png" type="Texture" id=54]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/stand1_0/L3,R1,C1,head,visible,normal,255.png" type="Texture" id=55]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/alert_0/L1,R1,C1,body,visible,normal,255.png" type="Texture" id=56]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/alert_3/L4,R1,C1,armOverHair,visible,normal,255.png" type="Texture" id=57]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/stand1_2/L3,R1,C1,head,visible,normal,255.png" type="Texture" id=58]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/alert_1/L1,R1,C1,body,visible,normal,255.png" type="Texture" id=59]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/walk1_1/L2,R1,C1,arm,visible,normal,255.png" type="Texture" id=60]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/stabO1_1/L4,R1,C1,armOverHair,visible,normal,255.png" type="Texture" id=61]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/jump_0/L4,R1,C1,armOverHair,visible,normal,255.png" type="Texture" id=62]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/walk1_2/L3,R1,C1,head,visible,normal,255.png" type="Texture" id=63]
[ext_resource path="res://assets/CharacterSpriteSheet/weapons/kandine_2.png" type="Texture" id=64]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/stabO1_2/L4,R1,C1,hairShade,visible,normal,255.png" type="Texture" id=65]
[ext_resource path="res://assets/CharacterSpriteSheet/weapons/kandine_jump_2.png" type="Texture" id=66]
[ext_resource path="res://assets/CharacterSpriteSheet/weapons/kandine_walking_1_3_4.png" type="Texture" id=67]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/stabO1_1/L2,R1,C1,head,visible,normal,255.png" type="Texture" id=68]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/stabO1_1/L3,R1,C1,hairShade,visible,normal,255.png" type="Texture" id=69]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/stabO1_0/L1,R1,C1,body,visible,normal,255.png" type="Texture" id=70]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/alert_1/L3,R1,C1,hairShade,visible,normal,255.png" type="Texture" id=71]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/jump_0/L3,R1,C1,hairShade,visible,normal,255.png" type="Texture" id=72]
[ext_resource path="res://assets/CharacterSpriteSheet/weapons/kandine_1.png" type="Texture" id=73]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/stabO1_2/L1,R1,C1,body,visible,normal,255.png" type="Texture" id=74]
[ext_resource path="res://assets/CharacterSpriteSheet/weapons/kandine_walking_2.png" type="Texture" id=75]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/alert_1/L2,R1,C1,head,visible,normal,255.png" type="Texture" id=76]
[ext_resource path="res://assets/CharacterSpriteSheet/default/0/stabO1_2/L2,R1,C1,arm,visible,normal,255.png" type="Texture" id=77]

[sub_resource type="GDScript" id=21]
script/source = "extends KinematicBody2D

# dynamic player variables
#onready var player = Global.player
onready var jump_speed
onready var health
onready var max_horizontal_speed
onready var velocity = Vector2.ZERO
onready var damage

# static player varaibles
onready var horizontal_acceleration = 3
onready var knockback_modifier = 0.2
onready var gravity = 800

# player states
export var can_climb = false
export var is_climbing = false
export var no_collision_zone = false
onready var direction = \"RIGHT\"
onready var attacking = false
onready var player_state

onready var animation = {
	\"f\": 1,
	\"d\": 1
}

func _ready():
	# timer.set_wait_time(1.5)
	#player = Global.register_player()
	$Label.text = Global.player.displayname
	max_horizontal_speed = (Global.player.stats.movementSpeed)
# warning-ignore:return_value_discarded
	Signals.connect(\"dialog_closed\", self, \"movable_switch\")
	
	jump_speed = (Global.player.stats.jumpSpeed)
# warning-ignore:return_value_discarded
	$take_damage.connect(\"area_entered\", self, \"on_hazard_area_entered\")
	get_node( \"Head\" ).set_flip_h( true )
	get_node( \"Body\" ).set_flip_h( true )
	get_node( \"Ears\" ).set_flip_h( true )
	get_node( \"Arm\" ).set_flip_h( true )
	get_node( \"Weapon\" ).scale.x = -1

func _physics_process(delta):
	if Global.movable:
		movement_loop(delta)
	#define_player_state()
	# update_health_display()

func define_player_state():
	player_state = {\"T\": Server.client_clock, \"P\": get_global_position(), \"M\": Global.current_map, \"A\": animation}
	Server.send_player_state(player_state)

func movement_loop(delta):
	change_direction()
	var move_vector = get_movement_vector()
	
	# change get velocity
	get_velocity(move_vector, delta)
	# warning-ignore:return_value_discarded
	move_and_slide(velocity, Vector2.UP)
	
	# player state if jumping
	if is_on_floor():
		animation[\"f\"] = 1
	else:
		animation[\"f\"] = 0
	
	if is_on_floor() or !is_climbing:
		velocity = move_and_slide(velocity, Vector2.UP)
	if is_climbing:
		velocity.x = 0

	update_animation()

func get_movement_vector():
	var moveVector = Vector2.ZERO
	
	# calculating x vector, allow x-axis jump off ropes or idle on floor
	if (!attacking && is_on_floor()) or (Input.is_action_pressed(\"move_right\") or Input.is_action_pressed(\"move_left\")) and Input.get_action_strength(\"jump\"):
		moveVector.x = (Input.get_action_strength(\"move_right\") - Input.get_action_strength(\"move_left\")) * .8
	else:
		moveVector.x = 0	
	# calculating y vector, allow jump off ropes
	if is_climbing:
		if (Input.is_action_pressed(\"move_right\") or Input.is_action_pressed(\"move_left\")) and Input.get_action_strength(\"jump\"):
			moveVector.y = -1
		else:
			moveVector.y = 0
	else:
		if Input.get_action_strength(\"jump\") && !attacking:
			moveVector.y = -1
		else:
			moveVector.y = 0
	return moveVector

func get_velocity(move_vector, delta):
	velocity.x += move_vector.x * horizontal_acceleration
	# slow down movement
	if(move_vector.x == 0):
		# allows forward jumping
		if(is_on_floor()):
			velocity.x = lerp(0, velocity.x, pow(2, -50 * delta))

	velocity.x = clamp(velocity.x, -max_horizontal_speed, max_horizontal_speed)
	
	if can_climb:
		if is_climbing:
			velocity.y = 0
			if Input.is_action_pressed(\"ui_up\"):
				velocity.y = -100
			elif Input.is_action_pressed(\"ui_down\"):
				velocity.y = 100
				#if is_on_floor():
					#is_climbing = false
			# jump off rope
			elif Input.is_action_pressed(\"jump\") && (Input.is_action_pressed(\"move_left\") or Input.is_action_pressed(\"move_right\")):
				#is_climbing = false
				velocity.y = move_vector.y * jump_speed * .8
				velocity.x = move_vector.x * 200
		# can climb but not climbing
		else:
			#if moving
			if (move_vector.y < 0 && is_on_floor()):
					velocity.y = move_vector.y * jump_speed
			# press up on ladder initiates climbing
			elif (!is_on_floor() && Input.is_action_pressed(\"ui_up\")) or (is_on_floor() && Input.is_action_pressed(\"ui_down\")):
					#is_climbing = true
					self.set_collision_layer_bit(0, false)
					self.set_collision_mask_bit(0, false)
					velocity.y = 0
					velocity.x = 0
			# over lapping ladder pressing nothing allows gravity
			else:
				velocity.y += gravity * delta
	# not climbable state
	else:
		# normal movement
		if (move_vector.y < 0 && is_on_floor()):
			velocity.y = move_vector.y * jump_speed
		else:
			velocity.y += gravity * delta
	
	#if !can_climb:
		#is_climbing = false

# attack > jump > walking > takeDamage > standing
func update_animation():
	var move_vector = get_movement_vector()
	
	if(attacking):
		pass

	elif(Input.is_action_pressed(\"attack\") && !is_climbing && Global.movable):
		$AnimationPlayer.playback_speed = 0.75
		attacking = true
		$AnimationPlayer.play(\"stab\")

	else:
		$AnimationPlayer.playback_speed = 1.0
		if(!is_on_floor()):
			$AnimationPlayer.play(\"jump\")

		elif(move_vector.x != 0):
			$AnimationPlayer.play(\"walk\")
	#	elif(tookDamage):
	#		$Head.play(\"hit\")
	#		$Arm.play(\"hit\")
	#		$Body.play(\"hit\")
	#		$Ears.play(\"hit\")
	#		$RightH.play(\"idle\")
	#		$LeftH.play(\"hit\")
	#		$RightHHit.play('hit')

		else:
			$AnimationPlayer.play(\"idle\")

func movable_switch():
	Global.movable = true

func change_direction():
	if Input.is_action_pressed(\"move_right\") && !attacking && !Input.is_action_pressed(\"move_left\"):
		direction = \"RIGHT\"
		if velocity.x < 0 && is_on_floor():
			velocity.x = 0
		get_node( \"Head\" ).set_flip_h( true )
		get_node( \"Body\" ).set_flip_h( true )
		get_node( \"Ears\" ).set_flip_h( true )
		get_node( \"Arm\" ).set_flip_h( true )
		get_node( \"Weapon\" ).scale.x = -1
		get_node(\"do_damage\").scale.x = 1
		animation[\"d\"] = 1
	elif Input.is_action_pressed(\"move_left\") && !attacking && !Input.is_action_pressed(\"move_right\"):
		direction = \"LEFT\"
		if velocity.x > 0 && is_on_floor():
			velocity.x  = 0
		get_node( \"Head\" ).set_flip_h( false )
		get_node( \"Body\" ).set_flip_h( false )
		get_node( \"Ears\" ).set_flip_h( false )
		get_node( \"Arm\" ).set_flip_h( false )
		get_node( \"Weapon\" ).scale.x = 1
		get_node(\"do_damage\").scale.x = -1
		animation[\"d\"] = 0

#########################################################################################
# floor collision while in air
func _on_Area2D_area_entered(_area):
	no_collision_zone = true
	self.set_collision_layer_bit(0, false)
	self.set_collision_mask_bit(0, false)
	print(\"no col\")

func _on_Area2D_area_exited(_area):
	no_collision_zone = false
	self.set_collision_layer_bit(0, true)
	self.set_collision_mask_bit(0, true)
	print(\"col\")
##########################################################################################
# attacking functions
func set_damage(damage_value):
	damage = damage_value
	print(\"player set damage = %s\" % damage)

func _on_AnimationPlayer_animation_finished(animation_name):
	if animation_name == \"stab\":
		attacking = false
		
func _unhandled_input(event):
	if event.is_action_pressed(\"attack\"):
		if Global.movable:
			Server.send_attack(1)
		else:
			print(\"cannot attack\")

func overlappingBodies():
	print(\"area ovlapping: \" + str($do_damage.get_overlapping_areas().size()))
	for body in $do_damage.get_overlapping_areas():
		print('player overlapping with: ', body)

######################################################################################
# functions to work on
#################################
#knock back function
# warning-ignore:unused_argument
func on_hazard_area_entered(area2d):
	pass
	#recieve_knockback(area2d.global_position)

# warning-ignore:unused_argument
func recieve_knockback(damage_source_pos: Vector2):
	pass
#	var knockback_direction = damage_source_pos.direction_to(self.global_position)
#	var knockback = knockback_direction * knockback_modifier *40	
#	self.global_position += knockback

# not used anymore?
# take damage function
\"\"\"
func take_damage():
	if !took_damage:
		if $take_damage.get_overlapping_areas().size() > 0:
			print(\"touch damage. HP = \", player.stats.mapValue.fields.health.doubleValue)
			took_damage = true
			if (player.stats.mapValue.fields.health.doubleValue <= 0):
				# respawn hp
				took_damage = false
				player.stats.mapValue.fields.health.doubleValue = 25
				print(\"died update\")
				Global.update_player(player)
				emit_signal(\"died\")
			else:
				$take_damage.set_monitoring(false) 
				timer.start()


func _on_Timer_timeout():
	timer.stop()
	took_damage = false
	$take_damage.set_monitoring(true) 

# insert iFrame
func on_hazard_area_exit(_area2d):
	if $take_damage.get_overlapping_areas().size() == 0:
		print(\"no overlapping bodies\")
		
func update_health_display():
	$HP.text = str(player[\"stats\"][\"health\"])
	# emit global signal send hp value -> global signal emits signal to ui to update hp value
\"\"\"
"

[sub_resource type="RectangleShape2D" id=8]
extents = Vector2( 21.5, 31 )

[sub_resource type="RectangleShape2D" id=14]
extents = Vector2( 17.5, 20 )

[sub_resource type="SpriteFrames" id=2]
animations = [ {
"frames": [ ExtResource( 56 ), ExtResource( 59 ), ExtResource( 40 ), ExtResource( 44 ) ],
"loop": true,
"name": "hit",
"speed": 5.0
}, {
"frames": [ ExtResource( 6 ), ExtResource( 1 ), ExtResource( 9 ), ExtResource( 4 ) ],
"loop": true,
"name": "idle",
"speed": 4.0
}, {
"frames": [ ExtResource( 15 ), ExtResource( 19 ) ],
"loop": true,
"name": "jump",
"speed": 5.0
}, {
"frames": [ ExtResource( 70 ), ExtResource( 41 ), ExtResource( 74 ) ],
"loop": true,
"name": "stab",
"speed": 3.0
}, {
"frames": [ ExtResource( 8 ), ExtResource( 3 ), ExtResource( 21 ), ExtResource( 5 ), ExtResource( 7 ) ],
"loop": true,
"name": "walk",
"speed": 5.0
} ]

[sub_resource type="SpriteFrames" id=3]
animations = [ {
"frames": [ ExtResource( 35 ), ExtResource( 76 ), ExtResource( 46 ), ExtResource( 47 ) ],
"loop": true,
"name": "hit",
"speed": 5.0
}, {
"frames": [ ExtResource( 55 ), ExtResource( 42 ), ExtResource( 58 ), ExtResource( 39 ) ],
"loop": true,
"name": "idle",
"speed": 5.0
}, {
"frames": [ ExtResource( 11 ), ExtResource( 26 ) ],
"loop": true,
"name": "jump",
"speed": 5.0
}, {
"frames": [ ExtResource( 50 ), ExtResource( 68 ), ExtResource( 34 ) ],
"loop": true,
"name": "stab",
"speed": 3.0
}, {
"frames": [ ExtResource( 20 ), ExtResource( 25 ), ExtResource( 63 ), ExtResource( 10 ), ExtResource( 22 ) ],
"loop": true,
"name": "walk",
"speed": 5.0
} ]

[sub_resource type="SpriteFrames" id=4]
animations = [ {
"frames": [ ExtResource( 53 ), ExtResource( 71 ), ExtResource( 48 ), ExtResource( 51 ) ],
"loop": true,
"name": "hit",
"speed": 5.0
}, {
"frames": [ ExtResource( 30 ), ExtResource( 14 ), ExtResource( 12 ), ExtResource( 52 ) ],
"loop": true,
"name": "idle",
"speed": 5.0
}, {
"frames": [ ExtResource( 72 ), ExtResource( 32 ) ],
"loop": true,
"name": "jump",
"speed": 5.0
}, {
"frames": [ ExtResource( 65 ), ExtResource( 69 ), ExtResource( 65 ) ],
"loop": true,
"name": "stab",
"speed": 3.0
}, {
"frames": [ ExtResource( 16 ), ExtResource( 18 ), ExtResource( 24 ), ExtResource( 23 ), ExtResource( 17 ) ],
"loop": true,
"name": "walk",
"speed": 5.0
} ]

[sub_resource type="SpriteFrames" id=5]
animations = [ {
"frames": [ ExtResource( 33 ), ExtResource( 49 ), ExtResource( 29 ), ExtResource( 57 ) ],
"loop": true,
"name": "hit",
"speed": 5.0
}, {
"frames": [ ExtResource( 31 ), ExtResource( 43 ), ExtResource( 54 ), ExtResource( 38 ) ],
"loop": true,
"name": "idle",
"speed": 5.0
}, {
"frames": [ ExtResource( 62 ), ExtResource( 13 ) ],
"loop": true,
"name": "jump",
"speed": 5.0
}, {
"frames": [ ExtResource( 37 ), ExtResource( 61 ), ExtResource( 77 ) ],
"loop": true,
"name": "stab",
"speed": 3.0
}, {
"frames": [ ExtResource( 28 ), ExtResource( 60 ), ExtResource( 45 ), ExtResource( 27 ), ExtResource( 36 ) ],
"loop": true,
"name": "walk",
"speed": 5.0
} ]

[sub_resource type="SpriteFrames" id=11]
animations = [ {
"frames": [ ExtResource( 73 ), ExtResource( 73 ), ExtResource( 73 ), ExtResource( 73 ) ],
"loop": true,
"name": "idle",
"speed": 5.0
}, {
"frames": [ ExtResource( 66 ), ExtResource( 66 ) ],
"loop": true,
"name": "jump",
"speed": 5.0
}, {
"frames": [ ExtResource( 73 ), ExtResource( 64 ), ExtResource( 73 ) ],
"loop": true,
"name": "stab",
"speed": 5.0
}, {
"frames": [ ExtResource( 67 ), ExtResource( 75 ), ExtResource( 67 ), ExtResource( 67 ) ],
"loop": true,
"name": "walk",
"speed": 5.0
} ]

[sub_resource type="Animation" id=12]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath(".:offset")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, -5 ) ]
}

[sub_resource type="Animation" id=15]
resource_name = "idle"
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("../Head:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("../Head:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "idle" ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("../Body:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../Body:animation")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "idle" ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../Arm:frame")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("../Arm:animation")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "idle" ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("../Ears:frame")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3 ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("../Ears:animation")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "idle" ]
}
tracks/8/type = "value"
tracks/8/path = NodePath(".:frame")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PoolRealArray( 0.00543853, 0.186404, 0.395468, 0.582778 ),
"transitions": PoolRealArray( 4.31583e-05, 1.63539e-05, 3.05175e-05, 0.000161072 ),
"update": 1,
"values": [ 0, 1, 2, 3 ]
}
tracks/9/type = "value"
tracks/9/path = NodePath(".:animation")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "idle" ]
}
tracks/10/type = "value"
tracks/10/path = NodePath(".:position")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/keys = {
"times": PoolRealArray( 0, 0.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ Vector2( 9, 9 ), Vector2( 9, 9 ) ]
}
tracks/11/type = "value"
tracks/11/path = NodePath(".:offset")
tracks/11/interp = 1
tracks/11/loop_wrap = true
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6 ),
"transitions": PoolRealArray( 1, 1e-05, 1e-05, 1.0067e-05 ),
"update": 1,
"values": [ Vector2( -2, 0 ), Vector2( -1, 0 ), Vector2( 0, 0 ), Vector2( -3, 0 ) ]
}

[sub_resource type="Animation" id=17]
resource_name = "jump"
loop = true
tracks/0/type = "bezier"
tracks/0/path = NodePath("../Body:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.2 )
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("../Head:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.200797 )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("../Ears:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.199942 )
}
tracks/3/type = "bezier"
tracks/3/path = NodePath("../Arm:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.200797 )
}
tracks/4/type = "bezier"
tracks/4/path = NodePath(".:frame")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.201651 )
}
tracks/5/type = "value"
tracks/5/path = NodePath(".:position")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ Vector2( 9, 9 ) ]
}
tracks/6/type = "value"
tracks/6/path = NodePath(".:animation")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "jump" ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("../Arm:animation")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "jump" ]
}
tracks/8/type = "value"
tracks/8/path = NodePath("../Ears:animation")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "jump" ]
}
tracks/9/type = "value"
tracks/9/path = NodePath("../Head:animation")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "jump" ]
}
tracks/10/type = "value"
tracks/10/path = NodePath("../Body:animation")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "jump" ]
}
tracks/11/type = "value"
tracks/11/path = NodePath(".:offset")
tracks/11/interp = 1
tracks/11/loop_wrap = true
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( -6, -15 ) ]
}

[sub_resource type="Animation" id=13]
resource_name = "stab"
length = 0.5
tracks/0/type = "bezier"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0, 2, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.2, 0.5 )
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:position")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.00192392 ),
"transitions": PoolRealArray( 0.00048828 ),
"update": 1,
"values": [ Vector2( 9, -1 ) ]
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("../Body:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0, 2, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.2, 0.5 )
}
tracks/3/type = "value"
tracks/3/path = NodePath("../Head:frame")
tracks/3/interp = 2
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.25, 0.5 ),
"transitions": PoolRealArray( 3.38615e-05, 1e-05, 1e-05 ),
"update": 1,
"values": [ 0, 1, 2 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../Ears:frame")
tracks/4/interp = 2
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.25, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("../do_damage/CollisionShape2D:disabled")
tracks/5/interp = 2
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0, 0.2, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ true, false, true ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("../Ears:animation")
tracks/6/interp = 2
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "stab" ]
}
tracks/7/type = "value"
tracks/7/path = NodePath(".:animation")
tracks/7/interp = 2
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "stab" ]
}
tracks/8/type = "value"
tracks/8/path = NodePath("../Body:animation")
tracks/8/interp = 2
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "stab" ]
}
tracks/9/type = "value"
tracks/9/path = NodePath("../Head:animation")
tracks/9/interp = 2
tracks/9/loop_wrap = true
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "stab" ]
}
tracks/10/type = "value"
tracks/10/path = NodePath("../Arm:frame")
tracks/10/interp = 2
tracks/10/loop_wrap = true
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/keys = {
"times": PoolRealArray( 0, 0.25, 0.5 ),
"transitions": PoolRealArray( 1e-05, 1e-05, 1e-05 ),
"update": 1,
"values": [ 0, 1, 2 ]
}
tracks/11/type = "value"
tracks/11/path = NodePath("../Arm:animation")
tracks/11/interp = 2
tracks/11/loop_wrap = true
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1e-05 ),
"update": 1,
"values": [ "stab" ]
}
tracks/12/type = "value"
tracks/12/path = NodePath(".:offset")
tracks/12/interp = 2
tracks/12/loop_wrap = true
tracks/12/imported = false
tracks/12/enabled = true
tracks/12/keys = {
"times": PoolRealArray( 0, 0.2, 0.5 ),
"transitions": PoolRealArray( 1e-05, 1e-05, 1e-05 ),
"update": 1,
"values": [ Vector2( 4, 6 ), Vector2( -36, -5 ), Vector2( 4.5, 6 ) ]
}
tracks/13/type = "method"
tracks/13/path = NodePath("..")
tracks/13/interp = 1
tracks/13/loop_wrap = true
tracks/13/imported = false
tracks/13/enabled = true
tracks/13/keys = {
"times": PoolRealArray( 0.4 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "overlappingBodies"
} ]
}

[sub_resource type="Animation" id=18]
resource_name = "walk"
loop = true
step = 1.0
tracks/0/type = "bezier"
tracks/0/path = NodePath("../Body:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 2, -0.25, 0, 0.25, 0, 3, -0.25, 0, 0.25, 0, 4, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.4, 0.6, 0.8 )
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("../Head:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0, 2, -0.25, 0, 0.25, 0, 3, -0.25, 0, 0.25, 0, 4, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.2, 0.4, 0.6, 0.8 )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("../Arm:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0, 2, -0.25, 0, 0.25, 0, 3, -0.25, 0, 0.25, 0, 4, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.199942, 0.39903, 0.598972, 0.798914 )
}
tracks/3/type = "bezier"
tracks/3/path = NodePath("../Ears:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0, 2, -0.25, 0, 0.25, 0, 3, -0.25, 0, 0.25, 0, 4, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.199942, 0.399884, 0.598118, 0.801478 )
}
tracks/4/type = "bezier"
tracks/4/path = NodePath(".:frame")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0, 2, -0.25, 0, 0.25, 0, 3, -0.25, 0, 0.25, 0, 4, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.200797, 0.39903, 0.597263, 0.801478 )
}
tracks/5/type = "value"
tracks/5/path = NodePath(".:position")
tracks/5/interp = 2
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 4.31584e-05 ),
"update": 1,
"values": [ Vector2( 9, -1 ) ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("../Body:animation")
tracks/6/interp = 2
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "walk" ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("../Head:animation")
tracks/7/interp = 2
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "walk" ]
}
tracks/8/type = "value"
tracks/8/path = NodePath("../Ears:animation")
tracks/8/interp = 2
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "walk" ]
}
tracks/9/type = "value"
tracks/9/path = NodePath("../Arm:animation")
tracks/9/interp = 2
tracks/9/loop_wrap = true
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "walk" ]
}
tracks/10/type = "value"
tracks/10/path = NodePath(".:animation")
tracks/10/interp = 2
tracks/10/loop_wrap = true
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "walk" ]
}
tracks/11/type = "value"
tracks/11/path = NodePath(".:offset")
tracks/11/interp = 1
tracks/11/loop_wrap = true
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/keys = {
"times": PoolRealArray( 0.185611, 0.409372, 0.603133, 0.78 ),
"transitions": PoolRealArray( 0.000370048, 0.000622344, 0.000714887, 1e-05 ),
"update": 0,
"values": [ Vector2( -1, 4 ), Vector2( -7, 5 ), Vector2( 0, 5 ), Vector2( 2, 3 ) ]
}

[sub_resource type="RectangleShape2D" id=19]
extents = Vector2( 2.25, 30.25 )

[sub_resource type="RectangleShape2D" id=20]
extents = Vector2( 20, 32 )

[node name="Player" type="KinematicBody2D" groups=["climber", "player"]]
position = Vector2( -7, -29 )
collision_layer = 3008
script = SubResource( 21 )

[node name="Camera2D" type="Camera2D" parent="."]
current = true
zoom = Vector2( 0.9, 0.9 )
drag_margin_h_enabled = true
drag_margin_v_enabled = true
smoothing_enabled = true
drag_margin_left = 0.4
drag_margin_right = 0.4
editor_draw_limits = true
editor_draw_drag_margin = true

[node name="lootbox" type="Area2D" parent="."]
collision_layer = 2
collision_mask = 2

[node name="CollisionShape2D" type="CollisionShape2D" parent="lootbox"]
position = Vector2( 10.5, -2 )
shape = SubResource( 8 )

[node name="take_damage" type="Area2D" parent="."]
collision_layer = 0
collision_mask = 4

[node name="CollisionShape2D" type="CollisionShape2D" parent="take_damage"]
position = Vector2( 10.5, -2 )
shape = SubResource( 8 )

[node name="do_damage" type="Area2D" parent="."]
collision_layer = 0
collision_mask = 32

[node name="CollisionShape2D" type="CollisionShape2D" parent="do_damage"]
position = Vector2( 30.5, 10 )
scale = Vector2( -1, 1 )
shape = SubResource( 14 )
disabled = true

[node name="Body" type="AnimatedSprite" parent="."]
position = Vector2( 8, -2 )
frames = SubResource( 2 )
animation = "stab"
flip_h = true

[node name="Head" type="AnimatedSprite" parent="."]
position = Vector2( 8, -3 )
frames = SubResource( 3 )
animation = "stab"
flip_h = true

[node name="Ears" type="AnimatedSprite" parent="."]
position = Vector2( 8, -5 )
frames = SubResource( 4 )
animation = "stab"
flip_h = true

[node name="Arm" type="AnimatedSprite" parent="."]
position = Vector2( 8, -2 )
frames = SubResource( 5 )
animation = "stab"
flip_h = true

[node name="Weapon" type="AnimatedSprite" parent="."]
position = Vector2( 9, -1 )
scale = Vector2( -1, 1 )
frames = SubResource( 11 )
animation = "stab"
centered = false
offset = Vector2( 4, 6 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
root_node = NodePath("../Weapon")
reset_on_save = false
anims/RESET = SubResource( 12 )
anims/idle = SubResource( 15 )
anims/jump = SubResource( 17 )
anims/stab = SubResource( 13 )
anims/walk = SubResource( 18 )

[node name="Label" type="Label" parent="."]
margin_left = -24.0
margin_top = 30.0
margin_right = 46.0
margin_bottom = 44.0
align = 1

[node name="Timer" type="Timer" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( 6.5, -2.75 )
shape = SubResource( 19 )

[node name="Area2D" type="Area2D" parent="."]
visible = false
position = Vector2( 8, -3 )
collision_layer = 1024
collision_mask = 1024

[node name="noCol" type="CollisionShape2D" parent="Area2D"]
shape = SubResource( 20 )

[node name="HP" type="Label" parent="."]
visible = false
margin_left = -14.0
margin_top = -61.0
margin_right = 34.0
margin_bottom = -39.0
align = 1

[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_AnimationPlayer_animation_finished"]
[connection signal="timeout" from="Timer" to="." method="_on_Timer_timeout"]
[connection signal="area_entered" from="Area2D" to="." method="_on_Area2D_area_entered"]
[connection signal="area_exited" from="Area2D" to="." method="_on_Area2D_area_exited"]
